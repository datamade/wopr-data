SQL_LOAD = """
DROP TABLE IF EXISTS SRC_chicago_business_licenses;

CREATE TABLE IF NOT EXISTS SRC_chicago_business_licenses(
ID VARCHAR(20),
LICENSE_ID INTEGER,
ACCOUNT_NUMBER INTEGER,
SITE_NUMBER INTEGER,
LEGAL_NAME VARCHAR(150),
DOING_BUSINESS_AS_NAME VARCHAR(150),
ADDRESS VARCHAR(80),
CITY VARCHAR(30),
STATE CHAR(2),
ZIP_CODE CHAR(5),
WARD INTEGER,
PRECINCT INTEGER,
POLICE_DISTRICT INTEGER,
LICENSE_CODE INTEGER,
LICENSE_DESCRIPTION VARCHAR(100),
LICENSE_NUMBER INTEGER,
APPLICATION_TYPE VARCHAR(50),
PAYMENT_DATE DATE,
LICENSE_TERM_START_DATE DATE,
LICENSE_TERM_EXPIRATION_DATE DATE,
DATE_ISSUED DATE,
LICENSE_STATUS VARCHAR(10),
LICENSE_STATUS_CHANGE_DATE DATE,
LATITUDE FLOAT8,
LONGITUDE FLOAT8,
LOCATION POINT,
PRIMARY KEY(LICENSE_ID));

COPY SRC_chicago_business_licenses
FROM '/project/evtimov/wopr/data/chicago-business-licenses_%s.csv'
WITH DELIMITER ','
CSV HEADER;
"""

SQL_UPDATE = """
DROP TABLE IF EXISTS NEW_chicago_business_licenses;

CREATE TABLE IF NOT EXISTS NEW_chicago_business_licenses(
  LICENSE_ID INTEGER,
  PRIMARY KEY(LICENSE_ID)
);


-- find new records in source data
INSERT INTO NEW_chicago_business_licenses
SELECT LICENSE_ID
FROM SRC_chicago_business_licenses
LEFT OUTER JOIN DAT_chicago_business_licenses USING (LICENSE_ID)
WHERE chicago_business_licenses_row_id IS NULL;


-- insert new records in database
INSERT INTO DAT_chicago_business_licenses(
start_date,
ID,
LICENSE_ID,
ACCOUNT_NUMBER,
SITE_NUMBER,
LEGAL_NAME,
DOING_BUSINESS_AS_NAME,
ADDRESS,
CITY,
STATE,
ZIP_CODE,
WARD,
PRECINCT,
POLICE_DISTRICT,
LICENSE_CODE,
LICENSE_DESCRIPTION,
LICENSE_NUMBER,
APPLICATION_TYPE,
PAYMENT_DATE,
LICENSE_TERM_START_DATE,
LICENSE_TERM_EXPIRATION_DATE,
DATE_ISSUED,
LICENSE_STATUS,
LICENSE_STATUS_CHANGE_DATE,
LATITUDE,
LONGITUDE,
LOCATION)
SELECT
'%s',
ID,
LICENSE_ID,
ACCOUNT_NUMBER,
SITE_NUMBER,
LEGAL_NAME,
DOING_BUSINESS_AS_NAME,
ADDRESS,
CITY,
STATE,
ZIP_CODE,
WARD,
PRECINCT,
POLICE_DISTRICT,
LICENSE_CODE,
LICENSE_DESCRIPTION,
LICENSE_NUMBER,
APPLICATION_TYPE,
PAYMENT_DATE,
LICENSE_TERM_START_DATE,
LICENSE_TERM_EXPIRATION_DATE,
DATE_ISSUED,
LICENSE_STATUS,
LICENSE_STATUS_CHANGE_DATE,
LATITUDE,
LONGITUDE,
LOCATION
FROM SRC_chicago_business_licenses
JOIN NEW_chicago_business_licenses USING (LICENSE_ID);

-- 
-- insert new records into DAT_master
--
INSERT INTO DAT_Master(
  start_date,
  end_date,
  current_flag,
  Location,
  LATITUDE, 
  LONGITUDE,
  obs_date,
  obs_ts,
  dataset_name,
  dataset_row_id)
SELECT
  start_date,
  end_date,
  current_flag,
  Location,
  LATITUDE, 
  LONGITUDE,
  LICENSE_TERM_START_DATE AS obs_date,
  NULL AS obs_ts,
  'chicago_business_licenses' AS dataset_name,
  chicago_business_licenses_row_id AS dataset_row_id
FROM
  DAT_chicago_business_licenses
JOIN
  NEW_chicago_business_licenses USING (LICENSE_ID);



DROP TABLE IF EXISTS CHG_chicago_business_licenses;

CREATE TABLE IF NOT EXISTS CHG_chicago_business_licenses(
  LICENSE_ID INTEGER,
  PRIMARY KEY(LICENSE_ID)
);

INSERT INTO CHG_chicago_business_licenses
SELECT LICENSE_ID
FROM SRC_chicago_business_licenses S
JOIN DAT_chicago_business_licenses D
USING (LICENSE_ID)
WHERE D.current_flag = true
AND (((S.ID IS NOT NULL OR D.ID IS NOT NULL) AND S.ID <> D.ID)
OR ((S.ACCOUNT_NUMBER IS NOT NULL OR D.ACCOUNT_NUMBER IS NOT NULL) AND S.ACCOUNT_NUMBER <> D.ACCOUNT_NUMBER)
OR ((S.SITE_NUMBER IS NOT NULL OR D.SITE_NUMBER IS NOT NULL) AND S.SITE_NUMBER <> D.SITE_NUMBER)
OR ((S.LEGAL_NAME IS NOT NULL OR D.LEGAL_NAME IS NOT NULL) AND S.LEGAL_NAME <> D.LEGAL_NAME)
OR ((S.DOING_BUSINESS_AS_NAME IS NOT NULL OR D.DOING_BUSINESS_AS_NAME IS NOT NULL) AND S.DOING_BUSINESS_AS_NAME <> D.DOING_BUSINESS_AS_NAME)
OR ((S.ADDRESS IS NOT NULL OR D.ADDRESS IS NOT NULL) AND S.ADDRESS <> D.ADDRESS)
OR ((S.CITY IS NOT NULL OR D.CITY IS NOT NULL) AND S.CITY <> D.CITY)
OR ((S.STATE IS NOT NULL OR D.STATE IS NOT NULL) AND S.STATE <> D.STATE)
OR ((S.ZIP_CODE IS NOT NULL OR D.ZIP_CODE IS NOT NULL) AND S.ZIP_CODE <> D.ZIP_CODE)
OR ((S.WARD IS NOT NULL OR D.WARD IS NOT NULL) AND S.WARD <> D.WARD)
OR ((S.PRECINCT IS NOT NULL OR D.PRECINCT IS NOT NULL) AND S.PRECINCT <> D.PRECINCT)
OR ((S.POLICE_DISTRICT IS NOT NULL OR D.POLICE_DISTRICT IS NOT NULL) AND S.POLICE_DISTRICT <> D.POLICE_DISTRICT)
OR ((S.LICENSE_CODE IS NOT NULL OR D.LICENSE_CODE IS NOT NULL) AND S.LICENSE_CODE <> D.LICENSE_CODE)
OR ((S.LICENSE_DESCRIPTION IS NOT NULL OR D.LICENSE_DESCRIPTION IS NOT NULL) AND S.LICENSE_DESCRIPTION <> D.LICENSE_DESCRIPTION)
OR ((S.LICENSE_NUMBER IS NOT NULL OR D.LICENSE_NUMBER IS NOT NULL) AND S.LICENSE_NUMBER <> D.LICENSE_NUMBER)
OR ((S.APPLICATION_TYPE IS NOT NULL OR D.APPLICATION_TYPE IS NOT NULL) AND S.APPLICATION_TYPE <> D.APPLICATION_TYPE)
OR ((S.PAYMENT_DATE IS NOT NULL OR D.PAYMENT_DATE IS NOT NULL) AND S.PAYMENT_DATE <> D.PAYMENT_DATE)
OR ((S.LICENSE_TERM_START_DATE IS NOT NULL OR D.LICENSE_TERM_START_DATE IS NOT NULL) AND S.LICENSE_TERM_START_DATE <> D.LICENSE_TERM_START_DATE)
OR ((S.LICENSE_TERM_EXPIRATION_DATE IS NOT NULL OR D.LICENSE_TERM_EXPIRATION_DATE IS NOT NULL) AND S.LICENSE_TERM_EXPIRATION_DATE <> D.LICENSE_TERM_EXPIRATION_DATE)
OR ((S.DATE_ISSUED IS NOT NULL OR D.DATE_ISSUED IS NOT NULL) AND S.DATE_ISSUED <> D.DATE_ISSUED)
OR ((S.LICENSE_STATUS IS NOT NULL OR D.LICENSE_STATUS IS NOT NULL) AND S.LICENSE_STATUS <> D.LICENSE_STATUS)
OR ((S.LICENSE_STATUS_CHANGE_DATE IS NOT NULL OR D.LICENSE_STATUS_CHANGE_DATE IS NOT NULL) AND S.LICENSE_STATUS_CHANGE_DATE <> D.LICENSE_STATUS_CHANGE_DATE)
OR ((S.LATITUDE IS NOT NULL OR D.LATITUDE IS NOT NULL) AND S.LATITUDE <> D.LATITUDE)
OR ((S.LONGITUDE IS NOT NULL OR D.LONGITUDE IS NOT NULL) AND S.LONGITUDE <> D.LONGITUDE));

-- update all existing records that are being changed with end_date and current_flag
UPDATE DAT_chicago_business_licenses D
SET end_date = '%s',
current_flag = FALSE
FROM CHG_chicago_business_licenses C
WHERE D.LICENSE_ID = C.LICENSE_ID
AND D.current_flag = TRUE;

-- update all existing records in DAT_master that are being changed with end_date and current_flag
UPDATE DAT_Master M
SET 
  current_flag = FALSE,
  end_date = '%s'
FROM
  DAT_chicago_business_licenses D
WHERE 
  M.dataset_row_id = D.chicago_business_licenses_row_id 
  AND D.current_flag = FALSE
  AND D.end_date = '%s';


-- insert the change records with start_date set to today
INSERT INTO DAT_chicago_business_licenses(
start_date,
ID,
LICENSE_ID,
ACCOUNT_NUMBER,
SITE_NUMBER,
LEGAL_NAME,
DOING_BUSINESS_AS_NAME,
ADDRESS,
CITY,
STATE,
ZIP_CODE,
WARD,
PRECINCT,
POLICE_DISTRICT,
LICENSE_CODE,
LICENSE_DESCRIPTION,
LICENSE_NUMBER,
APPLICATION_TYPE,
PAYMENT_DATE,
LICENSE_TERM_START_DATE,
LICENSE_TERM_EXPIRATION_DATE,
DATE_ISSUED,
LICENSE_STATUS,
LICENSE_STATUS_CHANGE_DATE,
LATITUDE,
LONGITUDE,
LOCATION)
SELECT
'%s',
ID,
LICENSE_ID,
ACCOUNT_NUMBER,
SITE_NUMBER,
LEGAL_NAME,
DOING_BUSINESS_AS_NAME,
ADDRESS,
CITY,
STATE,
ZIP_CODE,
WARD,
PRECINCT,
POLICE_DISTRICT,
LICENSE_CODE,
LICENSE_DESCRIPTION,
LICENSE_NUMBER,
APPLICATION_TYPE,
PAYMENT_DATE,
LICENSE_TERM_START_DATE,
LICENSE_TERM_EXPIRATION_DATE,
DATE_ISSUED,
LICENSE_STATUS,
LICENSE_STATUS_CHANGE_DATE,
LATITUDE,
LONGITUDE,
LOCATION
FROM SRC_chicago_business_licenses
JOIN CHG_chicago_business_licenses USING (LICENSE_ID);
"""

SRC_DIR = "/project/evtimov/wopr/data/"
START_DATE = "2013-10-31"

import os
srcFiles = [ f for f in os.listdir(SRC_DIR) if "chicago-business-licenses" in f ]
srcFiles.sort()
srcFiles = [ f for f in srcFiles if f[len("chicago-business-licenses_"):-4] >= START_DATE ]


SQL_DIR = "/project/evtimov/wopr/sql/"

fp = open(SQL_DIR + "updates_chicago-business-licenses.sql", 'w')

fp.write("\\timing")

import datetime

for srcF in srcFiles[:2]:
    dateStr = srcF[len("chicago-business-licenses_"):-4]
    prevDate = datetime.datetime.strptime(dateStr, '%Y-%m-%d') - datetime.timedelta(days=1)
    fp.write(SQL_LOAD % dateStr)
    fp.write(SQL_UPDATE % (dateStr, 
                           prevDate.strftime('%Y-%m-%d'), 
                           prevDate.strftime('%Y-%m-%d'), 
                           prevDate.strftime('%Y-%m-%d'), 
                           dateStr))

fp.close()

    
    
